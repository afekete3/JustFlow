{"version":3,"sources":["reducers/userReducer.js","reducers/tokenReducer.js","reducers/playlistReducer.js","reducers/songsReducer.js","reducers/uiReducer.js","reducers/soundReducer.js","reducers/spotifyPlayerReducer.js","reducers/playlistOrganizeReducer.js","reducers/index.js","actions/userActions.js","actions/tokenActions.js","actions/spotifyPlayerActions.js","actions/songActions.js","actions/uiActions.js","actions/soundActions.js","components/UserDetails/component.js","components/UserDetails/index.js","components/Header/index.js","components/SongControls/component.js","components/SongControls/index.js","components/VolumeControls/component.js","components/VolumeControls/index.js","components/Footer/index.js","components/UserPlaylists/component.js","actions/playlistActions.js","components/UserPlaylists/index.js","components/SongList/component.js","components/SongList/index.js","components/PlaylistHome/component.js","components/PlaylistHome/index.js","components/TrackSearch/component.js","components/TrackSearch/index.js","components/GeneratePlaylist/component.js","components/GeneratePlaylist/index.js","components/MainView/component.js","components/MainView/index.js","components/ArtWork/component.js","components/ArtWork/index.js","components/GeneratePlaylistHeader/component.js","components/GeneratePlaylistHeader/index.js","components/MainHeader/component.js","actions/playlistOrganizeActions.js","components/MainHeader/index.js","components/SideMenu/component.js","components/SideMenu/index.js","App.js","index.js"],"names":["userReducer","state","action","type","user","fetchUserError","tokenReducer","token","playlistReducer","fetchPlaylistPending","playlists","fetchPlaylistError","playlist","reorderPlaylistTrackPending","songs","reorderPlaylistTrackError","defaultState","fetchSongsPending","songPlaying","timeElapsed","songId","viewType","songPaused","selectedSongs","songsReducer","view","fetchSongsError","searchSongsPending","searchSongsError","fetchPlaylistSongsPending","fetchPlaylistSongsError","fetchArtistSongsPending","fetchArtistSongsError","songDetails","song","id","time","title","uiReducer","soundReducer","volume","spotifyPlayerReducer","spotifyPlayer","currentPlayerState","playlistOrganizeReducer","isOrganizing","combineReducers","fetchUser","accessToken","dispatch","request","Request","headers","Headers","fetch","then","res","statusText","window","location","href","json","catch","err","setToken","updateSpotifyPlayer","updateCurrentPlayerState","playSpecificTrack","track_uri","offset","context_uri","console","log","body_params","JSON","stringify","uris","undefined","uri","method","body","fetchSongs","uniqBy","items","item","track","artists","name","map","join","searchSongs","searchTerm","tracks","clearSongs","playSong","stopSong","pauseSong","resumeSong","increaseSongTime","updateViewType","setSelectedSongs","updateHeaderTitle","updateVolume","UserDetails","userImage","displayName","className","alt","src","connect","display_name","images","url","Header","SongControls","props","getSongIndex","index","filter","nextSong","track_window","next_tracks","length","nextTrack","prevSong","previous_tracks","previousTrack","toggleSong","togglePlay","this","calculateTime","intervalId","setInterval","duration","clearInterval","paused","setState","playerState","current_track","onClick","Icon","inverted","color","link","size","moment","minutes","second","format","style","width","Component","songName","artistName","bindActionCreators","VolumeControls","e","target","value","setVolume","Math","ceil","aria-hidden","min","max","onChange","Footer","audioControl","UserPlaylists","nextProps","userId","fetchPlaylistsMenu","fetchPlaylistSongs","owner","key","renderPlaylists","addPlaylistItem","playlistId","reorderPlaylistTrack","playlist_id","startIndex","endIndex","range_start","insert_before","SongList","currentPlaylist","currentSongs","headerTitle","track_uris","tempPlaylist","playlist_uri","ms","floor","seconds","toFixed","Segment","Dimmer","active","Loader","content","i","currentlyPlayingClass","circular","album","added_at","msToMinutesAndSeconds","duration_ms","renderSongs","songAddedId","PlaylistHome","Card","Image","Content","Description","description","Group","TrackSearch","updateSearchTerm","Form","onSubmit","Input","placeholder","renderSearch","GeneratePlaylist","checkBoxVisible","MainView","ArtWork","albumArtwork","albumImage","GeneratePlaylistHeader","generatePlaylistClick","bind","addSongsToPlaylist","nameError","sizeError","generatePlaylist","seedSongIds","seed","push","authorization","access_token","ids","num_of_songs","parsed","createGeneratedPlaylist","generated_playlist_ids","trackIds","data","addPlaylist","widths","Field","control","label","error","selectSong","MainHeader","organizePlaylist","updateOrganizingState","unordered_ids","ordered_ids","reorderPlaylist","startPlaylist","j","total","SideMenu","App","audio","pause","play","Audio","preview_url","device_id","firstAuth","authenticated","playerCheckInterval","player","queryString","parse","search","checkForPlayer","Spotify","Player","getOAuthToken","callback","tempThis","success","createEventHandlers","addListener","position","getVolume","transferPlaybackHere","PropTypes","object","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96069e87.chunk.js","sourcesContent":["export const userReducer = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n  case \"FETCH_USER_SUCCESS\":\r\n    return {\r\n      ...state,\r\n      user: action.user,\r\n      fetchUserError: false\r\n    };\r\n\r\n  case \"FETCH_USER_ERROR\":\r\n    return {\r\n      ...state,\r\n      fetchUserError: true\r\n    };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n\r\n};\r\n\r\nexport default userReducer;\r\n","export const tokenReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n  case \"SET_TOKEN\":\r\n    return {\r\n      ...state,\r\n      token: action.token\r\n    };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n\r\n};\r\n\r\nexport default tokenReducer;\r\n","const defaultState = {\r\n  playlists: [],\r\n  fetchPlaylistError: false,\r\n  fetchPlaylistPending: false,\r\n  reorderPlaylistTrackPending: false, \r\n  reorderPlaylistTrackError : false, \r\n};\r\n\r\nexport const playlistReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n  case \"FETCH_PLAYLIST_MENU_PENDING\":\r\n    return {\r\n      fetchPlaylistPending: true,\r\n      ...state\r\n    };\r\n\r\n  case \"FETCH_PLAYLIST_MENU_SUCCESS\":\r\n    return {\r\n      playlists: action.playlists,\r\n      fetchPlaylistError: false,\r\n      fetchPlaylistPending: false,\r\n      ...state, \r\n    };\r\n\r\n  case \"ADD_PLAYLIST_ITEM\":\r\n    return {\r\n      ...state,\r\n      playlists: [\r\n        ...state.playlists,\r\n        action.playlist\r\n      ]\r\n    };\r\n\r\n  case \"FETCH_PLAYLIST_MENU_ERROR\":\r\n    return {\r\n      fetchPlaylistError: true,\r\n      fetchPlaylistPending: false,\r\n      ...state\r\n    };\r\n\r\n  case \"REORDER_PLAYLIST_TRACK_PENDING\":\r\n    return{\r\n      reorderPlaylistTrackPending: true\r\n    }\r\n\r\n  case \"REORDER_PLAYLIST_TRACK_SUCCESS\":\r\n    return{\r\n      ...state,\r\n      reorderPlaylistTrackPending: false,\r\n      songs: action.songs\r\n    }\r\n\r\n  case \"REORDER_PLAYLIST_TRACK_ERROR\":\r\n    return{\r\n      reorderPlaylistTrackPending: false,\r\n      reorderPlaylistTrackError: true\r\n    }\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default playlistReducer;\r\n","const defaultState = {\r\n  fetchSongsPending: true,\r\n  songPlaying: false,\r\n  timeElapsed: 0,\r\n  songId: 0,\r\n  viewType:'songs',\r\n  songPaused: true, \r\n  selectedSongs : []\r\n};\r\n\r\nexport const songsReducer = (state = defaultState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n  case \"UPDATE_VIEW_TYPE\":\r\n    return {\r\n      ...state,\r\n      viewType: action.view\r\n    };\r\n\r\n  case \"FETCH_SONGS_PENDING\":\r\n    return {\r\n      ...state,\r\n      fetchSongsPending: true\r\n    };\r\n\r\n  case \"FETCH_SONGS_SUCCESS\":\r\n    return {\r\n      ...state,\r\n      songs: action.songs,\r\n      fetchSongsError: false,\r\n      fetchSongsPending: false,\r\n      viewType: 'songs'\r\n    };\r\n\r\n  case \"FETCH_SONGS_ERROR\":\r\n    return {\r\n      ...state,\r\n      fetchSongsError: true,\r\n      fetchSongsPending: false\r\n    };\r\n\r\n  case \"SEARCH_SONGS_PENDING\":\r\n    return {\r\n      ...state,\r\n      searchSongsPending: true\r\n    };\r\n\r\n  case \"SEARCH_SONGS_SUCCESS\":\r\n    return {\r\n      ...state,\r\n      songs: action.songs,\r\n      searchSongsError: false,\r\n      searchSongsPending: false,\r\n      viewType: 'search'\r\n    };\r\n\r\n  case \"SEARCH_SONGS_ERROR\":\r\n    return {\r\n      ...state,\r\n      searchSongsError: true,\r\n      searchSongsPending: false\r\n    };\r\n\r\n  case \"FETCH_RECENTLY_PLAYED_PENDING\":\r\n    return {\r\n      ...state,\r\n      fetchSongsPending: true\r\n    };\r\n\r\n  case \"FETCH_RECENTLY_PLAYED_SUCCESS\":\r\n    return {\r\n      ...state,\r\n      songs: action.songs,\r\n      viewType: 'Recently Played',\r\n      fetchSongsError: false,\r\n      fetchSongsPending: false\r\n    };\r\n\r\n  case \"FETCH_RECENTLY_PLAYED_ERROR\":\r\n    return {\r\n      ...state,\r\n      fetchSongsError: true,\r\n      fetchSongsPending: false\r\n    };\r\n\r\n  case \"FETCH_PLAYLIST_SONGS_PENDING\":\r\n    return {\r\n      ...state,\r\n      fetchPlaylistSongsPending: true\r\n    };\r\n\r\n  case \"FETCH_PLAYLIST_SONGS_SUCCESS\":\r\n    return {\r\n      ...state,\r\n      songs: action.songs,\r\n      viewType: 'playlist',\r\n      fetchPlaylistSongsError: false,\r\n      fetchPlaylistSongsPending: false\r\n    };\r\n\r\n  case \"FETCH_PLAYLIST_SONGS_ERROR\":\r\n    return {\r\n      ...state,\r\n      fetchPlaylistSongsError: true,\r\n      fetchPlaylistSongsPending: false\r\n    };\r\n\r\n  case \"FETCH_ARTIST_SONGS_PENDING\":\r\n    return {\r\n      ...state,\r\n      fetchArtistSongsPending: true\r\n    };\r\n\r\n  case \"FETCH_ARTIST_SONGS_SUCCESS\":\r\n    return {\r\n      ...state,\r\n      songs: action.songs,\r\n      viewType: 'Artist',\r\n      fetchArtistSongsError: false,\r\n      fetchArtistSongsPending: false\r\n    };\r\n\r\n  case \"FETCH_ARTIST_SONGS_ERROR\":\r\n    return {\r\n      ...state,\r\n      fetchArtistSongsError: true,\r\n      fetchArtistSongsPending: false\r\n    };\r\n\r\n  case \"PLAY_SONG\":\r\n    return {\r\n      ...state,\r\n      songPlaying: true,\r\n      songDetails: action.song,\r\n      songId: action.song.id,\r\n      timeElapsed: 0,\r\n      songPaused: false\r\n    };\r\n\r\n  case \"STOP_SONG\":\r\n    return {\r\n      ...state,\r\n      songPlaying: false,\r\n      songDetails: null,\r\n      timeElapsed: 0,\r\n      songPaused: true\r\n    };\r\n\r\n  case \"PAUSE_SONG\":\r\n    return {\r\n      ...state,\r\n      songPaused: true\r\n    };\r\n\r\n  case \"RESUME_SONG\":\r\n    return {\r\n      ...state,\r\n      songPaused: false\r\n    };\r\n\r\n  case \"INCREASE_SONG_TIME\":\r\n    return {\r\n      ...state,\r\n      timeElapsed: action.time\r\n    };\r\n\r\n  case \"SET_SELECTED_SONGS\":\r\n    return{\r\n      ...state, \r\n      selectedSongs : action.selectedSongs\r\n    }\r\n\r\n  case \"CLEAR_SONGS\":\r\n    return{\r\n      ...state, \r\n      songs : action.songs\r\n    }\r\n\r\n  default:\r\n    return state;\r\n  }\r\n\r\n};\r\n\r\nexport default songsReducer;\r\n","const defaultState = {\r\n  title: 'Songs'\r\n};\r\n\r\nexport const uiReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n\r\n  case \"UPDATE_HEADER_TITLE\":\r\n    return {\r\n      ...state,\r\n      title: action.title\r\n    };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n\r\n};\r\n\r\nexport default uiReducer;\r\n","export const soundReducer = (state = { volume: 100}, action) => {\r\n  switch (action.type) {\r\n  case \"UPDATE_VOLUME\":\r\n    return {\r\n      volume: action.volume\r\n    };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n\r\n};\r\n\r\nexport default soundReducer;\r\n","export const spotifyPlayerReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n    case \"UPDATE_PLAYER\":\r\n      return {\r\n          ...state,\r\n        spotifyPlayer: action.spotifyPlayer\r\n      };\r\n\r\n    case \"UPDATE_PLAYER_CURRENT_STATE\":\r\n      return{\r\n        ...state,\r\n        currentPlayerState: action.currentPlayerState\r\n      }\r\n\r\n    case \"PLAY_SPECIFIC_TRACK_ERROR\":\r\n      return{\r\n        ...state\r\n      }\r\n\r\n    case \"PLAY_SPECIFIC_TRACK_SUCCESS\":\r\n      return{\r\n        ...state\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n    }\r\n  \r\n  };\r\n  \r\n  export default spotifyPlayerReducer;","\r\n  \r\nexport const playlistOrganizeReducer = (state = { }, action) => {\r\nswitch (action.type) {\r\n\r\ncase \"UPDATE_ORGANIZING_STATE\":\r\n    return {\r\n    ...state,\r\n    isOrganizing: action.isOrganizing\r\n    };\r\n\r\ndefault:\r\n    return state;\r\n}\r\n\r\n};\r\n\r\nexport default playlistOrganizeReducer;","import { combineReducers } from \"redux\";\r\nimport userReducer from './userReducer';\r\nimport tokenReducer from './tokenReducer';\r\nimport playlistReducer from './playlistReducer';\r\nimport songsReducer from './songsReducer';\r\nimport uiReducer from './uiReducer';\r\nimport soundReducer from './soundReducer';\r\nimport spotifyPlayerReducer from './spotifyPlayerReducer';\r\nimport playlistOrganizeReducer from './playlistOrganizeReducer';\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  tokenReducer,\r\n  playlistReducer,\r\n  songsReducer,\r\n  uiReducer,\r\n  soundReducer,\r\n  spotifyPlayerReducer,\r\n  playlistOrganizeReducer\r\n});\r\n","export const fetchUserSuccess = (user) => {\r\n  return {\r\n    type: 'FETCH_USER_SUCCESS',\r\n    user\r\n  };\r\n};\r\n\r\nexport const fetchUserError = () => {\r\n  return {\r\n    type: 'FETCH_USER_ERROR'\r\n  };\r\n};\r\n\r\nexport const fetchUser = (accessToken) => {\r\n\r\n  return dispatch => {\r\n    const request = new Request('https://api.spotify.com/v1/me', {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n\r\n    fetch(request).then(res => {\r\n      // send user back to homepage if no token\r\n      if(res.statusText === \"Unauthorized\") {\r\n        window.location.href = './';\r\n      }\r\n      return res.json();\r\n    }).then(res => {\r\n      dispatch(fetchUserSuccess(res));\r\n    }).catch(err => {\r\n      dispatch(fetchUserError(err));\r\n    });\r\n  };\r\n};\r\n","export const setToken = (token) => {\r\n  return {\r\n    type: 'SET_TOKEN',\r\n    token\r\n  };\r\n};\r\n","export const updateSpotifyPlayer = (spotifyPlayer) => {\r\n    return {\r\n      type: 'UPDATE_PLAYER',\r\n      spotifyPlayer\r\n    };\r\n  };\r\n\r\nexport const updateCurrentPlayerState = (currentPlayerState)=>{\r\n  return{\r\n    type: 'UPDATE_PLAYER_CURRENT_STATE',\r\n    currentPlayerState\r\n  }\r\n}\r\n\r\nexport const playSpecificTrackSucess= () =>{\r\n  return{\r\n    type: 'PLAY_SPECIFIC_TRACK_SUCCESS'\r\n  }\r\n}\r\n\r\nexport const playSpecificTrackError= () =>{\r\n  return{\r\n    type: 'PLAY_SPECIFIC_TRACK_ERROR'\r\n  }\r\n}\r\n\r\nexport const playSpecificTrack = (accessToken, track_uri, offset, context_uri)=>{\r\n  return dispatch => {\r\n    console.log('-----------------------')\r\n    console.log(track_uri);\r\n    console.log(offset)\r\n    console.log(context_uri)\r\n    console.log('------------------------')\r\n    var body_params = JSON.stringify({\r\n      uris: track_uri\r\n    })\r\n    if(offset!==undefined){\r\n      body_params = JSON.stringify({\r\n        context_uri: context_uri,\r\n        offset: {\r\n          uri: offset\r\n        }\r\n      })\r\n      \r\n    }\r\n    else if(context_uri!==undefined){\r\n      body_params = JSON.stringify({\r\n        context_uri: context_uri,\r\n      })\r\n    }\r\n    const request = new Request(`https://api.spotify.com/v1/me/player/play`, {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      }),\r\n      body: body_params\r\n    });\r\n\r\n    fetch(request).then(res => {\r\n      if(res.statusText === \"Unauthorized\") {\r\n        window.location.href = './';\r\n      }\r\n      return res.json();\r\n    }).then(res => {\r\n\r\n      dispatch(playSpecificTrackSucess());\r\n    }).catch(err => {\r\n      dispatch(playSpecificTrackError(err));\r\n    });\r\n  };\r\n}","import uniqBy from 'lodash/uniqBy';\r\n\r\nexport const fetchSongsPending = () => {\r\n  return {\r\n    type: 'FETCH_SONGS_PENDING'\r\n  };\r\n};\r\n\r\nexport const fetchSongsSuccess = (songs) => {\r\n  return {\r\n    type: 'FETCH_SONGS_SUCCESS',\r\n    songs\r\n  };\r\n};\r\n\r\nexport const fetchSongsError = () => {\r\n  return {\r\n    type: 'FETCH_SONGS_ERROR'\r\n  };\r\n};\r\n\r\nexport const fetchSongs = (accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/me/tracks?limit=50`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n\r\n    dispatch(fetchSongsPending());\r\n\r\n    fetch(request).then(res => {\r\n      if(res.statusText === \"Unauthorized\") {\r\n        window.location.href = './';\r\n      }\r\n      return res.json();\r\n    }).then(res => {\r\n      // get all artist ids and remove duplicates\r\n      let artistIds = uniqBy(res.items, (item) => {\r\n        return item.track.artists[0].name;\r\n      }).map(item => {\r\n        return item.track.artists[0].id;\r\n      }).join(',');\r\n\r\n      dispatch(fetchSongsSuccess(res.items));\r\n    }).catch(err => {\r\n      dispatch(fetchSongsError(err));\r\n    });\r\n  };\r\n};\r\n\r\nexport const searchSongsPending = () => {\r\n  return {\r\n    type: 'SEARCH_SONGS_PENDING'\r\n  };\r\n};\r\n\r\nexport const searchSongsSuccess = (songs) => {\r\n  return {\r\n    type: 'SEARCH_SONGS_SUCCESS',\r\n    songs\r\n  };\r\n};\r\n\r\nexport const searchSongsError = () => {\r\n  return {\r\n    type: 'SEARCH_SONGS_ERROR'\r\n  };\r\n};\r\n\r\nexport const searchSongs = (searchTerm, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/search?q=${searchTerm}&type=track`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken,\r\n        'Accept': 'application/json'\r\n      })\r\n    });\r\n\r\n    dispatch(searchSongsPending());\r\n\r\n    fetch(request).then(res => {\r\n      if(res.statusText === \"Unauthorized\") {\r\n        window.location.href = './';\r\n      }\r\n      return res.json();\r\n    }).then(res => {\r\n      res.items = res.tracks.items.map(item => {\r\n        return {\r\n          track: item\r\n        };\r\n      });\r\n      dispatch(searchSongsSuccess(res.items));\r\n    }).catch(err => {\r\n      dispatch(fetchSongsError(err));\r\n    });\r\n  };\r\n};\r\n\r\nexport const clearSongs = () => {\r\n  let songs = ''\r\n  return {\r\n    type : 'CLEAR_SONGS', \r\n    songs\r\n  }\r\n}\r\n\r\nexport const fetchRecentlyPlayedPending = () => {\r\n  return {\r\n    type: 'FETCH_RECENTLY_PLAYED_PENDING'\r\n  };\r\n};\r\n\r\nexport const fetchRecentlyPlayedSuccess = (songs) => {\r\n  return {\r\n    type: 'FETCH_RECENTLY_PLAYED_SUCCESS',\r\n    songs\r\n  };\r\n};\r\n\r\nexport const fetchRecentlyPlayedError = () => {\r\n  return {\r\n    type: 'FETCH_RECENTLY_PLAYED_ERROR'\r\n  };\r\n};\r\n\r\nexport const fetchRecentlyPlayed = (accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/me/player/recently-played`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n\r\n    dispatch(fetchRecentlyPlayedPending());\r\n\r\n    fetch(request).then(res => {\r\n      return res.json();\r\n    }).then(res => {\r\n      //remove duplicates from recently played\r\n      res.items = uniqBy(res.items, (item) => {\r\n        return item.track.id;\r\n      });\r\n      dispatch(fetchRecentlyPlayedSuccess(res.items));\r\n    }).catch(err => {\r\n      dispatch(fetchRecentlyPlayedError(err));\r\n    });\r\n  };\r\n};\r\n\r\nexport const playSong = (song) => {\r\n  return {\r\n    type: 'PLAY_SONG',\r\n    song\r\n  };\r\n};\r\n\r\nexport const stopSong = () => {\r\n  return {\r\n    type: 'STOP_SONG'\r\n  };\r\n};\r\n\r\nexport const pauseSong = () => {\r\n  return {\r\n    type: 'PAUSE_SONG'\r\n  };\r\n};\r\n\r\nexport const resumeSong = () => {\r\n  return {\r\n    type: 'RESUME_SONG'\r\n  };\r\n};\r\n\r\nexport const increaseSongTime = (time) => {\r\n  return {\r\n    type: 'INCREASE_SONG_TIME',\r\n    time\r\n  };\r\n};\r\n\r\nexport const updateViewType = (view) => {\r\n  return {\r\n    type: 'UPDATE_VIEW_TYPE',\r\n    view\r\n  };\r\n};\r\n\r\nexport const setSelectedSongs = (selectedSongs) => {\r\n  return {\r\n    type: 'SET_SELECTED_SONGS', \r\n    selectedSongs\r\n  }\r\n}\r\n","export const updateHeaderTitle = (title) => {\r\n  return {\r\n    type: 'UPDATE_HEADER_TITLE',\r\n    title\r\n  };\r\n};\r\n","export const updateVolume = (volume) => {\r\n  return {\r\n    type: 'UPDATE_VOLUME',\r\n    volume\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './UserDetails.css';\r\n\r\nconst UserDetails = ({ userImage, displayName}) => {\r\n  return (\r\n    <div className='user-details-container'>\r\n      <img alt='user' className='user-image' src={userImage} />\r\n      <p className='user-name'>{displayName}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserDetails.propTypes = {\r\n  userImage: PropTypes.string,\r\n  displayName: PropTypes.string\r\n};\r\n\r\nexport default UserDetails;\r\n","import UserDetails from \"./component\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\treturn {\r\n\t\tdisplayName: state.userReducer.user ? state.userReducer.user.display_name : '',\r\n\t\tuserImage: state.userReducer.user && state.userReducer.user.images[0] ? state.userReducer.user.images[0].url : ''\r\n\t};\r\n\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(UserDetails);\r\n","import React from 'react';\r\nimport UserDetails from '../UserDetails';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return(\r\n    <div className='header'>\r\n      <UserDetails />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header ;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport './SongControls.css';\r\n\r\nimport {Icon, Progress} from 'semantic-ui-react';\r\n\r\nclass SongControls extends Component {\r\n\r\n\tconstructor(props) {\r\n    \r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  spotifyPlayer: props.spotifyPlayer,\r\n\t\t  timeElapsed: props.timeElapsed\r\n\t\t};\r\n\t\t\r\n\t  }\r\n\r\n\t  componentWillMount(){\r\n\t\tthis.calculateTime();\r\n\t  }\r\n\r\n\t// componentWillReceiveProps(nextProps) {\r\n\r\n\t//   if(!nextProps.songPlaying) {\r\n\t//     clearInterval(this.state.intervalId);\r\n\t//   }\r\n\r\n\t//   if(nextProps.songPlaying && nextProps.timeElapsed === 0) {\r\n\t//     clearInterval(this.state.intervalId);\r\n\t    \r\n\t//   }\r\n\r\n\t//   this.setState({\r\n\t// \ttimeElapsed: nextProps.currentPlayerState !== undefined ? nextProps.currentPlayerState.position/1000 : 0 ,\r\n\t// \tspotifyPlayer: nextProps.spotifyPlayer\r\n\t//   });\r\n\r\n\t// }\r\n\r\n\tcalculateTime() {\r\n\t\t\r\n\t\tconsole.log(\"creating interval\", this.props.currentPlayerState)\r\n\t\tconst intervalId  = setInterval(() => {\r\n\t\t\tif(this.props.currentPlayerState!==undefined){\r\n\t\t\t\tif(this.props.timeElapsed === this.props.currentPlayerState.duration/1000) {\r\n\t\t\t\t\tclearInterval(this.state.intervalId);\r\n\t\t\t\t  } else if(!this.props.currentPlayerState.paused) {\r\n\t\t\t\t\tthis.props.increaseSongTime(this.props.timeElapsed + 1);\r\n\t\t\t\t  }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t  }, 1000);\r\n\t\r\n\t\t  this.setState({\r\n\t\t\tintervalId: intervalId\r\n\t\t  });\r\n\t}\r\n\r\n\r\n\tgetSongIndex = () => {\r\n\t  const { songs, songDetails } = this.props;\r\n\t  const currentIndex = songs.map((song, index) => {\r\n\t    if(song.track === songDetails) {\r\n\t      return index;\r\n\t    }\r\n\t  }).filter(item => {\r\n\t    return item !== undefined;\r\n\t  })[0];\r\n\r\n\t  return currentIndex;\r\n\t}\r\n\r\n\tnextSong = () => {\r\n\t  if(this.props.spotifyPlayer!==null  && this.props.currentPlayerState!==undefined){\r\n\t\t\tif(this.props.currentPlayerState.track_window.next_tracks.length>0){\r\n\t\t\t\tthis.props.spotifyPlayer.nextTrack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprevSong = () => {\r\n\t\tif(this.props.spotifyPlayer!==null && this.props.currentPlayerState!==undefined){\r\n\t\t\tif(this.props.currentPlayerState.track_window.previous_tracks.length>0){\r\n\t\t\t\tthis.props.spotifyPlayer.previousTrack();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleSong = () =>{\r\n\t\tif(this.props.spotifyPlayer!==null){\r\n\t\t\tconsole.log(this.props.spotifyPlayer);\r\n\t\t\tthis.props.spotifyPlayer.togglePlay();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst playerState = this.props.currentPlayerState;\r\n\r\n\t\tif(playerState!==undefined){\r\n\t\t\treturn (\r\n\t\t\t\t<div className='song-player-container'>\r\n\t\t\r\n\t\t\t\t  <div className='song-details'>\r\n\t\t\t\t\t<p className='song-name'>{ playerState.track_window.current_track.name}</p>\r\n\t\t\t\t\t<p className='artist-name'>{ playerState.track_window.current_track.artists[0].name}</p>\r\n\t\t\t\t  </div>\r\n\t\t\r\n\t\t\t\t  <div className='song-controls'>\r\n\t\t\r\n\t\t\t\t\t<div onClick={this.prevSong} className='reverse-song'>\r\n\t\t\t\t\t  <Icon name='step backward' inverted color='grey' link/>\r\n\t\t\t\t\t</div>\r\n\t\t\r\n\t\t\t\t\t{playerState.paused===true &&(\r\n\t\t\t\t\t\t<div className='play-btn' onClick={this.toggleSong}>\r\n\t\t\t\t\t\t\t<Icon name='play' inverted color='grey'  link size='small'/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\r\n\t\t\t\t\t{playerState.paused===false &&(\r\n\t\t\t\t\t\t<div className='play-btn' onClick={this.toggleSong}>\r\n\t\t\t\t\t\t\t<Icon name='pause' inverted color='grey'  link size='small'/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\r\n\t\t\t\t\t<div onClick={this.nextSong} className='next-song'>\r\n\t\t\t\t\t  <Icon name='step forward' inverted color='grey'  link/>\r\n\t\t\t\t\t</div>\r\n\t\t\r\n\t\t\t\t  </div>\r\n\t\t\r\n\t\t\t\t  <div className='song-progress-container'>\r\n\t\t\t\t\t<p className='timer-start'>{ moment().minutes(0).second(this.props.timeElapsed).format('m:ss') }</p>\r\n\t\t\t\t\t<div className='song-progress'>\r\n\t\t\t\t\t  <div style={{ width: (this.props.timeElapsed/(playerState.duration/1000))*500 }} className='song-expired' />\r\n\t\t\t\t\t  {/* <Progress percent={(this.props.timeElapsed/(playerState.duration/1000))*100} inverted color='green' size='tiny'/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className='timer-end'>{ moment().minutes(0).second(playerState.duration/1000 ).format('m:ss') }</p>\r\n\t\t\t\t  </div>\r\n\t\t\r\n\t\t\t\t</div>\r\n\t\t\t  );\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t\t<div className='song-player-container'>\r\n\t\t\r\n\t\t\t\t  <div className='song-details'>\r\n\t\t\t\t\t<p className='song-name'>{ playerState!==undefined ? playerState.track_window.current_track.name : ''}</p>\r\n\t\t\t\t\t<p className='artist-name'>{ playerState!==undefined ? playerState.track_window.current_track.artists[0].name : '' }</p>\r\n\t\t\t\t  </div>\r\n\t\t\r\n\t\t\t\t  <div className='song-controls'>\r\n\t\t\r\n\t\t\t\t\t<div onClick={this.prevSong} className='reverse-song'>\r\n\t\t\t\t\t  <Icon name='step backward' inverted color='grey' link/>\r\n\t\t\t\t\t</div>\r\n\t\t\r\n\t\t\t\t\t{(\r\n\t\t\t\t\t\t<div className='play-btn' onClick={this.playSong}>\r\n\t\t\t\t\t\t\t<Icon name='play' inverted color='grey'  link size='small'/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\r\n\t\t\t\t\t{(\r\n\t\t\t\t\t\t<div className='play-btn' onClick={!this.props.songPaused ? this.props.pauseSong : this.props.resumeSong}>\r\n\t\t\t\t\t\t\t<Icon name='pause' inverted color='grey'  link size='small'/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\r\n\t\t\t\t\t<div onClick={this.nextSong} className='next-song'>\r\n\t\t\t\t\t  <Icon name='step forward' inverted color='grey'  link/>\r\n\t\t\t\t\t</div>\r\n\t\t\r\n\t\t\t\t  </div>\r\n\t\t\r\n\t\t\t\t  <div className='song-progress-container'>\r\n\t\t\t\t\t<p className='timer-start'>{ moment().minutes(0).second(this.props.timeElapsed).format('m:ss') }</p>\r\n\t\t\t\t\t<div className='song-progress'>\r\n\t\t\t\t\t<div style={{ width: 0 }} className='song-expired' />\r\n\t\t\t\t\t{/* <Progress percent={0} inverted color='green' size='tiny'/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className='timer-end'>{ moment().minutes(0).second(0).format('m:ss') }</p>\r\n\t\t\t\t  </div>\r\n\t\t\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t};\r\n\t}\r\n}\r\n\r\nSongControls.propTypes = {\r\n\ttoken: PropTypes.string,\r\n  timeElapsed: PropTypes.number,\r\n  songPlaying: PropTypes.bool,\r\n  songPaused: PropTypes.bool,\r\n  songName: PropTypes.string,\r\n  artistName: PropTypes.string,\r\n  stopSong: PropTypes.func,\r\n  resumeSong: PropTypes.func,\r\n  increaseSongTime: PropTypes.func,\r\n  pauseSong: PropTypes.func,\r\n  songs: PropTypes.array,\r\n  songDetails: PropTypes.object,\r\n  audioControl: PropTypes.func,\r\n  spotifyPlayer: PropTypes.object,\r\n  currentPlayerState: PropTypes.object\r\n};\r\n\r\n\r\nexport default (SongControls);\r\n","import SongControls from \"./component\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { increaseSongTime } from '../../actions/songActions';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    songName: state.songsReducer.songDetails ? state.songsReducer.songDetails.name : '',\r\n    artistName: state.songsReducer.songDetails ? state.songsReducer.songDetails.artists[0].name : '',\r\n    songPlaying: state.songsReducer.songPlaying,\r\n    timeElapsed: state.songsReducer.timeElapsed,\r\n    songPaused: state.songsReducer.songPaused,\r\n    songDetails: state.songsReducer.songDetails,\r\n    songs: state.songsReducer.songs,\r\n    token: state.tokenReducer.token,\r\n    spotifyPlayer: state.spotifyPlayerReducer.spotifyPlayer,\r\n    currentPlayerState: state.spotifyPlayerReducer.currentPlayerState\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return bindActionCreators({\r\n    increaseSongTime\r\n  }, dispatch);\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongControls);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './VolumeControls.css';\r\n\r\nclass VolumeControls extends Component {\r\n\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.state = {\r\n      volume: props.volume\r\n    };\r\n    \r\n  }\r\n\r\n\tupdateVolume = (e) => {\r\n\t  this.setState({\r\n\t    volume: e.target.value\r\n\t  });\r\n\r\n\t  if(this.props.spotifyPlayer!==undefined){\r\n\t\tthis.props.spotifyPlayer.setVolume(e.target.value/100);\r\n\t\tthis.props.updateVolume(Math.ceil(e.target.value / 10) * 10);\r\n\t  }\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t  return (\r\n\t    <div className='volume-container'>\r\n\t      <i className=\"fa fa-volume-up\" aria-hidden=\"true\"/>\r\n\t      <input className='volume' type=\"range\" min={0} max={100} value={this.props.volume} onChange={this.updateVolume} />\r\n\t    </div>\r\n\t  );\r\n    \r\n\t}\r\n}\r\n\r\nVolumeControls.propTypes = {\r\n  volume: PropTypes.number,\r\n  updateVolume: PropTypes.func,\r\n  spotifyPlayer: PropTypes.object\r\n};\r\n\r\nexport default VolumeControls;\r\n","import SongControls from \"./component\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateVolume } from '../../actions/soundActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    volume: state.soundReducer.volume,\r\n    spotifyPlayer: state.spotifyPlayerReducer.spotifyPlayer\r\n  };\r\n  \r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return bindActionCreators({\r\n    updateVolume\r\n  }, dispatch);\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongControls);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SongControls from '../SongControls';\r\nimport VolumeControls from '../VolumeControls';\r\nimport './Footer.css';\r\n\r\nconst Footer = ({ stopSong, pauseSong, resumeSong, audioControl}) => {\r\n  return(\r\n    <div className='footer'>\r\n      <SongControls\r\n        stopSong={ stopSong }\r\n        pauseSong={ pauseSong }\r\n        resumeSong={ resumeSong }\r\n        audioControl={ audioControl }\r\n      />\r\n      <VolumeControls />\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  stopSong: PropTypes.func,\r\n  pauseSong: PropTypes.func,\r\n  resumeSong: PropTypes.func,\r\n  audioControl: PropTypes.func\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './UserPlaylists.css';\r\n\r\nclass UserPlaylists extends Component {\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    if(nextProps.userId !== '' && nextProps.token !== '') {\r\n      this.props.fetchPlaylistsMenu(nextProps.userId, nextProps.token);\r\n    }\r\n  }\r\n\r\n  renderPlaylists() {\r\n    return this.props.playlists.map(playlist => {\r\n      const getPlaylistSongs = () => {\r\n        this.props.fetchPlaylistSongs(playlist.owner.id, playlist.id, this.props.token);\r\n        this.props.updateHeaderTitle(playlist.name);\r\n      };\r\n\r\n      return (\r\n        <li onClick={ getPlaylistSongs } className={this.props.title === playlist.name ? 'active side-menu-item' : 'side-menu-item'} key={ playlist.id }>\r\n          { playlist.name }\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='user-playlist-container'>\r\n        <h3 className='user-playlist-header'>Playlists</h3>\r\n        {\r\n          this.props.playlists && this.renderPlaylists()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUserPlaylists.propTypes = {\r\n  userId: PropTypes.string,\r\n  token: PropTypes.string,\r\n  title: PropTypes.string,\r\n  playlists:  PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.array\r\n  ]),\r\n  fetchPlaylistsMenu: PropTypes.func,\r\n  fetchPlaylistSongs: PropTypes.func,\r\n  updateHeaderTitle: PropTypes.func\r\n};\r\n\r\nexport default UserPlaylists;\r\n","import uniqBy from 'lodash/uniqBy';\r\n\r\nexport const fetchPlaylistMenuPending = () => {\r\n  return {\r\n    type: 'FETCH_PLAYLIST_MENU_PENDING'\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistMenuSuccess = (playlists) => {\r\n  return {\r\n    type: 'FETCH_PLAYLIST_MENU_SUCCESS',\r\n    playlists\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistMenuError = () => {\r\n  return {\r\n    type: 'FETCH_PLAYLIST_MENU_ERROR'\r\n  };\r\n};\r\n\r\nexport const addPlaylistItem = (playlist) => {\r\n  return {\r\n    type: 'ADD_PLAYLIST_ITEM',\r\n    playlist\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistsMenu = (userId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n\r\n    dispatch(fetchPlaylistMenuPending());\r\n\r\n    fetch(request).then(res => {\r\n      if(res.statusText === \"Unauthorized\") {\r\n        window.location.href = './';\r\n      }\r\n      return res.json();\r\n    }).then(res => {\r\n      dispatch(fetchPlaylistMenuSuccess(res.items));\r\n    }).catch(err => {\r\n      dispatch(fetchPlaylistMenuError(err));\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const fetchPlaylistSongsPending = () => {\r\n  return {\r\n    type: 'FETCH_PLAYLIST_SONGS_PENDING'\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsSuccess = (songs) => {\r\n  return {\r\n    type: 'FETCH_PLAYLIST_SONGS_SUCCESS',\r\n    songs\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongsError = () => {\r\n  return {\r\n    type: 'FETCH_PLAYLIST_SONGS_ERROR'\r\n  };\r\n};\r\n\r\nexport const fetchPlaylistSongs = (userId, playlistId, accessToken) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      })\r\n    });\r\n\r\n    dispatch(fetchPlaylistSongsPending());\r\n\r\n    fetch(request).then(res => {\r\n      return res.json();\r\n    }).then(res => {\r\n      //remove duplicate tracks\r\n      res.items = uniqBy(res.items, (item) => {\r\n        return item.track.id;\r\n      });\r\n      dispatch(fetchPlaylistSongsSuccess(res.items));\r\n    }).catch(err => {\r\n      dispatch(fetchPlaylistSongsError(err));\r\n    });\r\n  };\r\n};\r\n\r\nexport const reorderPlaylistTrackPending = () => {\r\n  return {\r\n    type: 'REORDER_PLAYLIST_TRACK_PENDING'\r\n  };\r\n};\r\n\r\nexport const reorderPlaylistTrackSuccess = (songs) => {\r\n  return {\r\n    type: 'REORDER_PLAYLIST_TRACK_SUCCESS',\r\n    songs\r\n  };\r\n};\r\n\r\nexport const reorderPlaylistTrackError = () => {\r\n  return {\r\n    type: 'REORDER_PLAYLIST_TRACK_ERROR'\r\n  };\r\n};\r\n\r\nexport const reorderPlaylistTrack = (playlist_id, accessToken, startIndex, endIndex) => {\r\n  return dispatch => {\r\n    const request = new Request(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + accessToken\r\n      }),\r\n      body: {\r\n        range_start: startIndex,\r\n        insert_before: endIndex\r\n      }\r\n    })\r\n\r\n    dispatch(reorderPlaylistTrackPending());\r\n\r\n    fetch(request).then(res=>{\r\n      dispatch(reorderPlaylistTrackSuccess(res));\r\n    }).catch(err =>{\r\n      dispatch(reorderPlaylistTrackError(err));\r\n      \r\n    });\r\n  }\r\n}\r\n","import UserPlaylists from \"./component\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchPlaylistsMenu, fetchPlaylistSongs } from '../../actions/playlistActions';\r\nimport { updateHeaderTitle } from '../../actions/uiActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\treturn {\r\n\t\tuserId: state.userReducer.user ? state.userReducer.user.id : '',\r\n\t\tplaylists: state.playlistReducer.playlists ? state.playlistReducer.playlists : '',\r\n\t\ttoken: state.tokenReducer.token ? state.tokenReducer.token : '',\r\n\t\ttitle: state.uiReducer.title\r\n\t};\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n\treturn bindActionCreators({\r\n\t\tfetchPlaylistsMenu,\r\n\t\tfetchPlaylistSongs,\r\n\t\tupdateHeaderTitle\r\n\t}, dispatch);\r\n\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPlaylists);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport './SongList.css';\r\nimport FlipMove from 'react-flip-move'\r\nimport {Icon, Segment, Dimmer, Loader} from 'semantic-ui-react';\r\n\r\nclass SongList extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state= {\r\n      currentPlaylist: null,\r\n      currentSongs: []\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // just want to remove the songs from the list\r\n    this.props.clearSongs()\r\n    this.props.setSelectedSongs([])\r\n  }\r\n\r\n  playSong(song) {\r\n    if(this.props.headerTitle==='GeneratePlaylist'){\r\n      var track_uris = [song.track.uri];\r\n      this.props.playSpecificTrack(this.props.token, track_uris, undefined, undefined)\r\n    }\r\n    else{\r\n      console.log(\"playlist\")\r\n      let tempPlaylist = this.props.playlists.filter(playlist => {\r\n        return playlist.name === this.props.headerTitle;\r\n      })[0];\r\n      if(this.state.currentPlaylist===null || this.state.currentPlaylist.name!==tempPlaylist.name){\r\n        this.setState({currentPlaylist: tempPlaylist}, ()=>{\r\n          console.log(this.state.currentPlaylist.uri)\r\n          var playlist_uri = this.state.currentPlaylist.uri;\r\n          var offset = song.track.uri;\r\n          this.props.playSpecificTrack(this.props.token, undefined, offset, playlist_uri)\r\n        })\r\n      }\r\n      else{\r\n          var playlist_uri = this.state.currentPlaylist.uri;\r\n          var offset = song.track.uri;\r\n          this.props.playSpecificTrack(this.props.token, undefined, offset, playlist_uri)\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\n  msToMinutesAndSeconds(ms) {\r\n    const minutes = Math.floor(ms / 60000);\r\n    const seconds = ((ms % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n  }\r\n\r\n  renderSongs() {\r\n    if(this.state.currentSongs!==this.props.songs){\r\n      this.setState({currentSongs: this.props.songs})\r\n    }\r\n    return (\r\n      <Segment >\r\n            <Dimmer active={this.props.isOrganizing!==undefined ? this.props.isOrganizing : false}>\r\n              <Loader content='Organizing...' />\r\n            </Dimmer>\r\n         <FlipMove duration={600}>{\r\n                \r\n            this.state.currentSongs.map((song, i) => {\r\n              const currentlyPlayingClass = this.props.currentPlayerState!==undefined && song.track.id === this.props.currentPlayerState.track_window.current_track.id ? \"fa-pause-circle-o greenText\" : \"fa-play-circle-o\";\r\n\r\n              return (\r\n                <li onClick={()=>{\r\n                  \r\n                  this.props.setSelectedSongs([song])\r\n                }} className={song.track.id === this.props.songId ? `active user-song-item greenText ${currentlyPlayingClass}` : `user-song-item`} key={ song.track.id }>\r\n                  <div onClick={() => {this.playSong(song) } } className='play-song'>\r\n                    <Icon circular name='play' inverted color='grey'  link/>\r\n                  </div>\r\n\r\n                  <div className='song-title'>\r\n                    <p className={`${currentlyPlayingClass}`}>{ song.track.name }</p>\r\n                  </div>\r\n\r\n                  <div className='song-artist'>\r\n                    <p className={`${currentlyPlayingClass}`}>{ song.track.artists[0].name }</p>\r\n                  </div>\r\n\r\n                  <div className='song-album'>\r\n                    <p className={`${currentlyPlayingClass}`}>{ song.track.album.name }</p>\r\n                  </div>\r\n\r\n                  <div className='song-added'>\r\n                    <p className={`${currentlyPlayingClass}`}>{ moment(song.added_at).format('YYYY-MM-DD')}</p>\r\n                  </div>\r\n\r\n                  <div className='song-length'>\r\n                    <p className={`${currentlyPlayingClass}`}>{ this.msToMinutesAndSeconds(song.track.duration_ms) }</p>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })\r\n            }\r\n            </FlipMove>\r\n   </Segment>\r\n      \r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n            <div className='song-header-container'>\r\n              <div className='song-title-header'>\r\n                <p>Title</p>\r\n              </div>\r\n              <div className='song-artist-header'>\r\n                <p>Artist</p>\r\n              </div>\r\n              <div className='song-album-header'>\r\n                <p>Album</p>\r\n              </div>\r\n              <div className='song-added-header'>\r\n                <i className=\"fa fa-calendar-plus-o\" aria-hidden=\"true\"/>\r\n              </div>\r\n              <div className='song-length-header'>\r\n                <p><i className=\"fa fa-clock-o\" aria-hidden=\"true\" /></p>\r\n              </div>\r\n              <div className='song-length-header'>\r\n                <p><i className=\"fa fa-clock-o\" aria-hidden=\"true\" /></p>\r\n              </div>\r\n            </div>\r\n              {\r\n                this.props.songs && !this.props.fetchPlaylistSongsPending && this.renderSongs()\r\n              }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSongList.propTypes = {\r\n  viewType: PropTypes.string,\r\n  token: PropTypes.string,\r\n  songAddedId: PropTypes.string,\r\n  songId: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  songs: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.array\r\n  ]),\r\n  fetchSongsError: PropTypes.bool,\r\n  fetchSongsPending: PropTypes.bool,\r\n  fetchPlaylistSongsPending: PropTypes.bool,\r\n  fetchSongs: PropTypes.func,\r\n  addSongToLibrary: PropTypes.func,\r\n  headerTitle: PropTypes.string,\r\n  playSpecificTrack: PropTypes.func,\r\n  playlists: PropTypes.array,\r\n  currentPlayerState: PropTypes.object,\r\n  isOrganizing: PropTypes.bool,\r\n  setSelectedSongs : PropTypes.func, \r\n  clearSongs : PropTypes.func, \r\n};\r\n\r\nexport default SongList;\r\n","import SongList from \"./component\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchSongs, setSelectedSongs, clearSongs } from '../../actions/songActions';\r\nimport {playSpecificTrack} from '../../actions/spotifyPlayerActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    token: state.tokenReducer.token ? state.tokenReducer.token : '',\r\n    songs: state.songsReducer.songs ? state.songsReducer.songs : '',\r\n    fetchSongsError: state.songsReducer.fetchSongsError,\r\n    fetchSongsPending: state.songsReducer.fetchSongsPending,\r\n    fetchPlaylistSongsPending: state.songsReducer.fetchPlaylistSongsPending,\r\n    songId: state.songsReducer.songId,\r\n    songAddedId: state.userReducer.songId || '',\r\n    viewType: state.songsReducer.viewType,\r\n    headerTitle: state.uiReducer.title,\r\n    playlists: state.playlistReducer.playlists,\r\n    currentPlayerState: state.spotifyPlayerReducer.currentPlayerState,\r\n    isOrganizing: state.playlistOrganizeReducer.isOrganizing\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return bindActionCreators({\r\n    fetchSongs,\r\n    setSelectedSongs, \r\n    clearSongs,\r\n    playSpecificTrack\r\n  }, dispatch);\r\n\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './PlaylistHome.css';\r\nimport { Card, Image } from 'semantic-ui-react'\r\n\r\n\r\n\r\nclass PlaylistHome extends Component{\r\n\r\n    componentWillReceiveProps (nextProps) {\r\n        if(nextProps.userId !== '' && nextProps.token !== '') {\r\n          this.props.fetchPlaylistsMenu(nextProps.userId, nextProps.token);\r\n        }\r\n      }\r\n\r\n    renderPlaylists() {\r\n      if(this.props.playlists!==''){\r\n        return this.props.playlists.map(playlist => {\r\n          const getPlaylistSongs = () => {\r\n            this.props.fetchPlaylistSongs(playlist.owner.id, playlist.id, this.props.token);\r\n            this.props.updateHeaderTitle(playlist.name);\r\n            \r\n          };\r\n    \r\n          return (\r\n\r\n            <Card color='grey' key={playlist.id} className='card-main' onClick={getPlaylistSongs}>\r\n                <Image src={playlist.images[0] ? playlist.images[0].url : null}/>\r\n                <Card.Content>\r\n                    <Card.Header >{playlist.name}</Card.Header>\r\n                    <Card.Description>{playlist.description}</Card.Description>\r\n                </Card.Content>\r\n            </Card>\r\n          );\r\n        });\r\n      }\r\n        \r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card.Group>\r\n                    {this.renderPlaylists()}\r\n                </Card.Group>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPlaylistHome.propTypes = {\r\n    userId: PropTypes.string,\r\n    token: PropTypes.string,\r\n    title: PropTypes.string,\r\n    playlists:  PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.array\r\n    ]),\r\n    fetchPlaylistsMenu: PropTypes.func,\r\n    fetchPlaylistSongs: PropTypes.func,\r\n    updateHeaderTitle: PropTypes.func,\r\n    updateViewType: PropTypes.func\r\n  };\r\n\r\nexport default PlaylistHome;","import PlaylistHome from './component';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchPlaylistsMenu, fetchPlaylistSongs } from '../../actions/playlistActions';\r\nimport { updateHeaderTitle } from '../../actions/uiActions';\r\nimport {updateViewType} from '../../actions/songActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\treturn {\r\n\t\tuserId: state.userReducer.user ? state.userReducer.user.id : '',\r\n\t\tplaylists: state.playlistReducer.playlists ? state.playlistReducer.playlists : '',\r\n\t\ttoken: state.tokenReducer.token ? state.tokenReducer.token : '',\r\n\t\ttitle: state.uiReducer.title\r\n\t};\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n\treturn bindActionCreators({\r\n\t\tfetchPlaylistsMenu,\r\n\t\tfetchPlaylistSongs,\r\n\t\tupdateHeaderTitle,\r\n\t\tupdateViewType\r\n\t}, dispatch);\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistHome);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TrackSearch.css';\r\n\r\nimport {Form} from 'semantic-ui-react';\r\n\r\nclass TrackSearch extends Component {\r\n\r\n\tstate = {\r\n\t  searchTerm: ''\r\n\t};\r\n\r\n\tupdateSearchTerm = (e) => {\r\n\t  this.setState({\r\n\t    searchTerm: e.target.value\r\n\t  });\r\n\t  \r\n\t}\r\n\r\n\trenderSearch() {\r\n\r\n\t\treturn(\r\n\t\t\t<div >\r\n\t\t\t\t<h3>Search for songs to base your playlist off of!</h3>\r\n\t\t\t\t<Form inverted onSubmit={() => { this.props.searchSongs(this.state.searchTerm, this.props.token);}}>\r\n\t\t\t\t\t<Form.Input onChange={this.updateSearchTerm} placeholder='Search for a song...'/>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t  return(\r\n\t    <div className='track-search-container'>\r\n\t\t\t{this.renderSearch()}\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nTrackSearch.propTypes = {\r\n  searchSongs: PropTypes.func,\r\n  token: PropTypes.string,\r\n};\r\n\r\nexport default TrackSearch;\r\n","import TrackSearch from \"./component\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { searchSongs } from '../../actions/songActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    token: state.tokenReducer.token\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return bindActionCreators({\r\n    searchSongs,\r\n  }, dispatch);\r\n\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackSearch);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SongList from '../SongList';\r\nimport './GeneratePlaylist.css';\r\nimport TrackSearch from '../TrackSearch';\r\n\r\n\r\nclass GeneratePlaylist extends Component{\r\n\r\n    componentWillUnmount(){\r\n        // clear the selected songs \r\n        this.props.setSelectedSongs([])\r\n    }\r\n\r\n    generatePlaylist() {\r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <TrackSearch />\r\n                {this.props.songs.length != 0 && <SongList checkBoxVisible={true}/>}\r\n            </div>\r\n        );\r\n    };\r\n\r\n};\r\n\r\nGeneratePlaylist.propTypes={\r\n      songs: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.array\r\n      ]),\r\n      selectedSongs : PropTypes.array, \r\n      setSelectedSongs : PropTypes.func, \r\n};\r\n\r\nexport default GeneratePlaylist;","import GeneratePlaylist from './component';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { setSelectedSongs } from '../../actions/songActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n      songs: state.songsReducer.songs ? state.songsReducer.songs : '',\r\n      selectedSongs : state.songsReducer.selectedSongs\r\n    };\r\n  \r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n  \r\n    return bindActionCreators({\r\n      setSelectedSongs\r\n    }, dispatch);\r\n  \r\n  };\r\n  export default connect(mapStateToProps, mapDispatchToProps)(GeneratePlaylist);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SongList from '../SongList';\r\nimport './MainView.css';\r\nimport PlaylistHome from '../PlaylistHome';\r\nimport GeneratePlaylist from '../GeneratePlaylist';\r\n\r\nconst MainView = ({ headerTitle, audioControl, resumeSong, pauseSong }) => {\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        headerTitle==='' ?\r\n        (<PlaylistHome  />) :\r\n        headerTitle === 'Home' ?\r\n          (<PlaylistHome  />) :\r\n          headerTitle === 'GeneratePlaylist' ?\r\n          (<GeneratePlaylist/>) :\r\n              ( <SongList resumeSong={ resumeSong } pauseSong={ pauseSong } audioControl={ audioControl } />)\r\n      }\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nMainView.propTypes = {\r\n  headerTitle: PropTypes.string,\r\n  audioControl: PropTypes.func,\r\n  resumeSong: PropTypes.func,\r\n  pauseSong: PropTypes.func\r\n};\r\n\r\nexport default MainView;\r\n","import MainView from \"./component\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    headerTitle: state.uiReducer.title\r\n  };\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps)(MainView);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ArtWork.css';\r\n\r\nconst ArtWork = (albumArtwork) => {\r\n\r\n  console.log(\"ARTWORK\", albumArtwork)\r\n\r\n  return (\r\n    <div className='album-artwork-container'>\r\n      <img className='album-artwork' src={ albumArtwork.albumImage } />\r\n    </div>\r\n  );\r\n};\r\n\r\nArtWork.propTypes = {\r\n  albumArtwork: PropTypes.string\r\n};\r\n\r\nexport default ArtWork;\r\n","import SongControls from \"./component\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    albumImage: state.spotifyPlayerReducer.currentPlayerState ? state.spotifyPlayerReducer.currentPlayerState.track_window.current_track.album.images[0].url : ''\r\n  };\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongControls);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './GeneratePlaylistHeader.css';\r\nimport {Form, TextArea, Input} from 'semantic-ui-react';\r\n\r\n\r\nclass GeneratePlaylistHeader extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.generatePlaylistClick = this.generatePlaylistClick.bind(this); \r\n    this.addSongsToPlaylist = this.addSongsToPlaylist.bind(this); \r\n    this.state = {\r\n      name : \"\", \r\n      size : 0, \r\n      nameError : false, \r\n      sizeError : false,  \r\n    }\r\n  }\r\n\r\n  generatePlaylistClick(){\r\n    if(this.state.name === \"\"){\r\n      this.setState({nameError : true}); \r\n    }\r\n    else if(this.state.nameError){\r\n      this.setState({nameError : false}); \r\n    }\r\n    if(this.state.size <= 0){\r\n      this.setState({sizeError : true}); \r\n    }\r\n    else if(this.state.sizeError){\r\n      this.setState({sizeError : false}); \r\n    }\r\n    if(!this.state.sizeError && !this.state.nameError){\r\n      this.generatePlaylist();\r\n    }\r\n  }\r\n\r\n  \r\n  generatePlaylist(){\r\n    var seedSongIds = [];\r\n    \r\n    for(let seed of this.props.selectedSongs){\r\n      seedSongIds.push(seed.track.id);      \r\n    }\r\n    fetch(\"http://localhost:8080/playlist/generate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: `Bearer ${this.props.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n        },\r\n\t\t  body: JSON.stringify({\r\n        access_token: this.props.token,\r\n        ids:seedSongIds, \r\n        num_of_songs: this.state.size, \r\n\t\t  }),\r\n\t\t}).then(res => {\r\n      res.json().then(parsed=>{\r\n        this.createGeneratedPlaylist(parsed.generated_playlist_ids);\r\n      })\r\n    });\r\n  }\r\n\r\n  createGeneratedPlaylist(trackIds){\r\n    const request = new Request(`https://api.spotify.com/v1/users/${this.props.userId}/playlists`, {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + this.props.token,\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n      body: JSON.stringify({\r\n        'name' : this.state.name\r\n      })\r\n    })\r\n    fetch(request)\r\n    .then((res) =>{\r\n      return res.json()\r\n    })\r\n    .then((data)=>{\r\n      this.addSongsToPlaylist(trackIds, data['id'])\r\n    })\r\n  }\r\n\r\n  addSongsToPlaylist(trackIds, playlistId){\r\n    let uris = ''\r\n\r\n    for(let i = 0; i < trackIds.length; i++){\r\n      if(i === trackIds.length - 1){\r\n        uris += `spotify:track:${trackIds[i]}`\r\n      }\r\n      else{\r\n        uris += `spotify:track:${trackIds[i]},`\r\n      }\r\n    }\r\n    console.log(uris)\r\n    const request = new Request(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${uris}`, {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + this.props.token,\r\n        \"Content-Type\": \"application/json\",\r\n      })\r\n    })\r\n    fetch(request)\r\n    .then(res =>{\r\n      return res.json(); \r\n    })\r\n    .then(data=>{\r\n      console.log(data)\r\n      this.addPlaylist(playlistId);\r\n    });\r\n  }\r\n\r\n  addPlaylist(playlistId){\r\n    const request = new Request(`https://api.spotify.com/v1/playlists/${playlistId}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + this.props.token,\r\n        \"Content-Type\": \"application/json\",\r\n      })\r\n    })\r\n    fetch(request)\r\n    .then(res =>{\r\n      return res.json(); \r\n    })\r\n    .then(data=>{\r\n      console.log(data)\r\n      this.props.addPlaylistItem(data)\r\n      this.props.fetchPlaylistSongs(this.props.userId, playlistId, this.props.token);\r\n      this.props.updateHeaderTitle(this.state.name); \r\n    });\r\n  }\r\n\r\n  selectSong(){\r\n    if(this.props.selectedSongs.length > 0){\r\n        return  (<div>\r\n                    <div className='playlist-title-container'>\r\n                        <div className='playlist-image-container'>\r\n                            <img  className='playlist-image' src={this.props.selectedSongs[0].track.album.images[0] ? this.props.selectedSongs[0].track.album.images[0].url : null} />\r\n                        </div>\r\n                        \r\n                        <div className='playlist-info-container'>\r\n                            <p className='playlist-text'>SELECTED SONG</p>\r\n                            <h3 className='header-title'>{this.props.selectedSongs[0].track.name}</h3>\r\n                            <p className='created-by'>Artist: <span className='lighter-text'>{this.props.selectedSongs[0].track.artists[0].name}</span> </p>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n    }\r\n    return <div/>\r\n    \r\n  }\r\n\r\n  render(){\r\n\r\n    return (\r\n      <div>\r\n        <h3>Generate Playlist</h3>\r\n        <Form inverted>\r\n          <Form.Group widths='equal'>\r\n            <Form.Field \r\n              control={Input}\r\n              label = 'Playlist Name'\r\n              placeholder='Playlist Name'\r\n              error={this.state.nameError} \r\n              onChange={e=> this.setState({'name' : e.target.value})}\r\n            />\r\n            <Form.Field \r\n              control={Input}\r\n              label = 'Playlist Size'\r\n              type='number' \r\n              placeholder='Playlist Size'\r\n              error={this.state.sizeError}\r\n              onChange={e=> this.setState({'size' : e.target.value})} \r\n            /> \r\n          </Form.Group>\r\n          {this.props.selectedSongs.length > 0 && (\r\n            <div>\r\n              <label>Seed Songs</label>\r\n              {this.selectSong()}\r\n            </div>\r\n          )}\r\n          <button onClick={this.generatePlaylistClick} className='organize-btn'>GENERATE</button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGeneratePlaylistHeader.propTypes = {\r\n  selectedSongs : PropTypes.array, \r\n  token : PropTypes.string, \r\n  userId : PropTypes.string, \r\n  updateHeaderTitle : PropTypes.func,\r\n  updateViewType : PropTypes.func, \r\n  fetchPlaylistSongs : PropTypes.func, \r\n  fetchPlaylistsMenu: PropTypes.func, \r\n  addPlaylistItem : PropTypes.func, \r\n};\r\n\r\nexport default GeneratePlaylistHeader;\r\n","import TrackSearch from \"./component\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { searchSongs, updateViewType } from '../../actions/songActions';\r\nimport {updateHeaderTitle} from '../../actions/uiActions';\r\nimport { fetchPlaylistSongs, fetchPlaylistsMenu, addPlaylistItem } from '../../actions/playlistActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    token: state.tokenReducer.token, \r\n    selectedSongs : state.songsReducer.selectedSongs, \r\n\t\tuserId: state.userReducer.user ? state.userReducer.user.id : '',\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return bindActionCreators({\r\n    searchSongs,\r\n    updateHeaderTitle, \r\n    updateViewType, \r\n    fetchPlaylistSongs, \r\n    fetchPlaylistsMenu, \r\n    addPlaylistItem\r\n  }, dispatch);\r\n\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackSearch);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GeneratePlaylistHeader from '../GeneratePlaylistHeader'; \r\nimport './MainHeader.css';\r\n\r\n\r\nclass MainHeader extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      currentPlaylist: null\r\n    };\r\n  }\r\n\r\n  reorderPlaylist(ordered_ids){\r\n    var sortedSongs = [];\r\n    for (var i =0; i< ordered_ids.length; i++){\r\n      var index = 0;\r\n      for (var j =0; j< this.props.songs.length; j++){\r\n        if(this.props.songs[j].track.id===ordered_ids[i]){\r\n          index = j;\r\n          break;\r\n        }       \r\n      }\r\n      console.log(\"Original\", index);\r\n      console.log('new', i);\r\n\r\n      const request = new Request(`https://api.spotify.com/v1/playlists/${this.state.currentPlaylist.id}/tracks`, {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer ' + this.props.token,\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n      body: JSON.stringify({\r\n        range_start: index,\r\n        insert_before: i\r\n      })\r\n    })\r\n    fetch(request).then(res =>{\r\n      console.log(\"before\",this.props.songs);\r\n      sortedSongs = res\r\n      this.props.fetchPlaylistSongs(this.state.currentPlaylist.owner.id, this.state.currentPlaylist.id, this.props.token);\r\n      console.log(\"after\",this.props.songs);\r\n\r\n    });\r\n\r\n\r\n      // this.props.reorderPlaylistTrack(this.state.currentPlaylist.id, this.props.token, index, i);\r\n    }\r\n    this.props.updateOrganizingState(false);\r\n    console.log(\"ORDERED!!!!\")\r\n  }\r\n\r\n\r\n  organizePlaylist=() =>{\r\n    this.props.updateOrganizingState(true);\r\n    console.log(\"current playlist\", this.state.currentPlaylist)\r\n\r\n    var unordered_ids = [];\r\n    for (var i =0; i< this.props.songs.length; i++){\r\n      unordered_ids.push(this.props.songs[i].track.id)       \r\n    }\r\n\r\n    fetch(\"http://localhost:8080/playlist/organize\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: `Bearer ${this.props.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n        },\r\n\t\t  body: JSON.stringify({\r\n        access_token: this.props.token,\r\n        ids:unordered_ids\r\n\t\t  }),\r\n\t\t}).then(res => {\r\n      res.json().then(parsed=>{\r\n        console.log(\"Parsed\",parsed.ordered_ids)\r\n        console.log(this)\r\n        this.reorderPlaylist(parsed.ordered_ids)\r\n      })\r\n      //return res.json();\r\n    });\r\n  }\r\n\r\n  startPlaylist=()=>{\r\n    if(this.props.currentPlayerState!==undefined && this.state.currentPlaylist!==null){\r\n      console.log(\"currentPlaylist\", this.state.currentPlaylist)\r\n      var playlist_uri = this.state.currentPlaylist.uri;\r\n      this.props.playSpecificTrack(this.props.token, undefined, undefined, playlist_uri)\r\n    }\r\n  }\r\n\r\n  render(){\r\n    \r\n\r\n    if(this.props.viewType === 'playlist') {\r\n      let tempPlaylist = this.props.playlists.filter(playlist => {\r\n        return playlist.name === this.props.headerTitle;\r\n      })[0];\r\n      if(tempPlaylist !== undefined && (this.state.currentPlaylist===null || this.state.currentPlaylist.name!==tempPlaylist.name)){\r\n        this.setState({currentPlaylist: tempPlaylist})\r\n      }\r\n      \r\n    }\r\n\r\n    return (\r\n\r\n      <div className='section-title'>\r\n\r\n        { this.props.headerTitle==='Home' && (\r\n          <div>\r\n            <h3>Your Library</h3>\r\n          </div>\r\n        )}\r\n\r\n        { this.props.headerTitle === 'GeneratePlaylist' &&(\r\n          <div>\r\n            <GeneratePlaylistHeader/>\r\n          </div>\r\n        )}\r\n        {this.props.viewType === 'playlist' && this.state.currentPlaylist!==null && (\r\n          <div className='playlist-title-container'>\r\n            <div className='playlist-image-container'>\r\n              <img className='playlist-image' src={this.state.currentPlaylist.images[0] ? this.state.currentPlaylist.images[0].url : null} />\r\n            </div>\r\n            <div className='playlist-info-container'>\r\n              <p className='playlist-text'>PLAYLIST</p>\r\n              <h3 className='header-title'>{this.props.headerTitle}</h3>\r\n              <p className='created-by'>Created By: <span className='lighter-text'>{this.state.currentPlaylist.owner.display_name}</span> - {this.state.currentPlaylist.tracks.total} songs</p>\r\n              <button\r\n                onClick={this.startPlaylist}\r\n                className='main-pause-play-btn'>\r\n                {/* {this.props.songPaused ? 'PLAY' : 'PAUSE'} */}\r\n                PLAY\r\n              </button>\r\n              <button onClick={this.organizePlaylist} className='organize-btn'>ORGANIZE</button>\r\n\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nMainHeader.propTypes = {\r\n  pauseSong: PropTypes.func,\r\n  resumeSong: PropTypes.func,\r\n  updateHeaderTitle: PropTypes.func,\r\n  updateViewType: PropTypes.func,\r\n  songPaused: PropTypes.bool,\r\n  headerTitle: PropTypes.string,\r\n  viewType: PropTypes.string,\r\n  playlists: PropTypes.array,\r\n  token: PropTypes.string,\r\n  songs: PropTypes.array,\r\n  reorderPlaylistTrack: PropTypes.func,\r\n  fetchPlaylistSongs: PropTypes.func,\r\n  currentPlayerState: PropTypes.object,\r\n  updateOrganizingState: PropTypes.func\r\n};\r\n\r\nexport default MainHeader;\r\n","export const updateOrganizingState = (isOrganizing) => {\r\n    return {\r\n      type: 'UPDATE_ORGANIZING_STATE',\r\n      isOrganizing: isOrganizing\r\n    };\r\n  };\r\n  ","import MainHeader from \"./component\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateHeaderTitle } from '../../actions/uiActions';\r\nimport { updateViewType } from '../../actions/songActions';\r\nimport {reorderPlaylistTrack, fetchPlaylistSongs} from '../../actions/playlistActions';\r\nimport {playSpecificTrack} from '../../actions/spotifyPlayerActions';\r\nimport {updateOrganizingState} from '../../actions/playlistOrganizeActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    songPaused: state.songsReducer.songPaused,\r\n    headerTitle: state.uiReducer.title,\r\n    viewType: state.songsReducer.viewType,\r\n    playlists: state.playlistReducer.playlists,\r\n    token: state.tokenReducer.token,\r\n    songs: state.songsReducer.songs,\r\n    currentPlayerState: state.spotifyPlayerReducer.currentPlayerState\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return bindActionCreators({\r\n    updateHeaderTitle,\r\n    updateViewType,\r\n    reorderPlaylistTrack,\r\n    fetchPlaylistSongs,\r\n    playSpecificTrack,\r\n    updateOrganizingState\r\n  }, dispatch);\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHeader);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SideMenu.css';\r\n\r\nimport {Icon} from 'semantic-ui-react';\r\n\r\nconst SideMenu = ({\r\n  updateHeaderTitle,\r\n  updateViewType,\r\n}) => {\r\n\r\n\r\n  const handleHomeClick = () =>{\r\n    updateHeaderTitle('Home');\r\n    updateViewType('Home');\r\n\r\n  }\r\n\r\n  const handleGenerateClick = () =>{\r\n    updateHeaderTitle('GeneratePlaylist');\r\n    updateViewType('songs');\r\n\r\n  }\r\n\r\n  return (\r\n    <ul className='side-menu-container'>\r\n\r\n      <li className='side-menu-item' onClick={handleHomeClick}>\r\n        <Icon name='home'/>\r\n        <h3 className='side-menu-title'>Home</h3>\r\n      </li>\r\n\r\n      <li className='side-menu-item' onClick={handleGenerateClick}>\r\n        <Icon name='random'/>\r\n        <h3 className='side-menu-title'>Generate Playlist</h3>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n};\r\n\r\nSideMenu.propTypes = {\r\n  updateHeaderTitle: PropTypes.func,\r\n  updateViewType: PropTypes.func,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default SideMenu;\r\n","import SideMenu from \"./component\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateViewType } from '../../actions/songActions';\r\nimport { updateHeaderTitle } from '../../actions/uiActions';\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    title: state.uiReducer.title\r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  return bindActionCreators({\r\n    updateViewType,\r\n    updateHeaderTitle,\r\n  }, dispatch);\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideMenu);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from './actions/userActions';\r\nimport { setToken } from './actions/tokenActions';\r\nimport {updateSpotifyPlayer, updateCurrentPlayerState} from './actions/spotifyPlayerActions'\r\nimport { playSong, stopSong, pauseSong, resumeSong, increaseSongTime } from './actions/songActions';\r\nimport {updateHeaderTitle} from './actions/uiActions';\r\nimport {updateVolume} from './actions/soundActions';\r\nimport './App.css';\r\nimport queryString from 'query-string'\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport UserPlaylists from './components/UserPlaylists';\r\nimport MainView from './components/MainView';\r\nimport ArtWork from './components/ArtWork';\r\nimport MainHeader from './components/MainHeader';\r\nimport SideMenu from './components/SideMenu';\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tspotifyPlayer: null,\r\n\t\t\tdevice_id: null,\r\n\t\t\taccessToken: null,\r\n\t\t\tfirstAuth: true,\r\n\t\t\tauthenticated: false\r\n\t\t  };\r\n\t\t\r\n\t\tthis.playerCheckInterval = null;\r\n\t\tthis.player = null;\r\n\t}\r\n\t\r\n\tstatic audio;\r\n\r\n\tasync componentDidMount() {\r\n\r\n\t\tlet parsed = queryString.parse(window.location.search)\r\n\t\tif(parsed['access_token']===undefined){\r\n\t\t\twindow.location = 'http://localhost:8080/';\r\n\t\t\tthis.setState({authenticated: true})\r\n\t\t}\r\n\t\telse if(this.state.firstAuth !== false){\r\n\t\t\tlet accessToken = parsed['access_token']\r\n\t\t\tthis.props.setToken(accessToken)\r\n\t\t\tthis.setState({accessToken: accessToken, firstAuth: false})\r\n\t\t\tthis.playerCheckInterval = setInterval(() => this.checkForPlayer(), 1000);\r\n\t\t}\r\n\t\tthis.props.updateHeaderTitle('Home')\r\n\t}\r\n\r\n\tcheckForPlayer(){\r\n\t\tif(window.Spotify !== undefined){\r\n\t\t\tclearInterval(this.playerCheckInterval);\r\n\t\t  this.player = new window.Spotify.Player({\r\n\t\t\t  name: 'JustFlow',\r\n\t\t\t  getOAuthToken: callback =>{\r\n\t\t\t\t  \r\n\t\t\t\t  callback(this.props.token);\r\n\t\t\t  },\r\n\t\t\t  volume: 0.5\r\n\t\t  });\r\n\t\t  var tempThis = this;\r\n\t\t  this.player.connect().then(success=>{\r\n\t\t\t  if(success){\r\n\t\t\t\t  console.log('The Web Playback SDK successfully connected to Spotify!');\r\n\t\t\t\t  this.createEventHandlers();\r\n\t\t\t\t  tempThis.setState({spotifyPlayer: this.player, device_id: this.player.device_id})\r\n\t\t\t  }\r\n\t\t\t  else{\r\n\t\t\t\t  console.log(\"Uncessful connection\")\r\n\t\t\t  }\r\n\t\t  });\r\n\t\t  \r\n\t\t}\r\n\t}\r\n\r\n\ttransferPlaybackHere() {\r\n\t\tconst { device_id, token } = this.state;\r\n\t\tconsole.log(\"state\", this.state)\r\n\t\tfetch(\"https://api.spotify.com/v1/me/player\", {\r\n\t\t  method: \"PUT\",\r\n\t\t  headers: {\r\n\t\t\tauthorization: `Bearer ${this.props.token}`,\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t  },\r\n\t\t  body: JSON.stringify({\r\n\t\t\t\"device_ids\": [ device_id ],\r\n\t\t\t\"play\": false,\r\n\t\t  }),\r\n\t\t});\r\n\t  }\r\n\r\n\tstartPlayer(){\r\n\t\tif(this.state.spotifyPlayer!==null){\r\n\t\t\tconsole.log(this.state.spotifyPlayer);\r\n\t\t\tthis.state.spotifyPlayer.togglePlay().then(()=>{\r\n\t\t\t\tconsole.log('PLAYING ')\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcreateEventHandlers() {\r\n\t\tthis.player.addListener('initialization_error', e => { console.error(e); });\r\n\t\tthis.player.addListener('authentication_error', e => {\r\n\t\t  console.error(e);\r\n\t\t});\r\n\t\tthis.player.addListener('account_error', e => { console.error(e); });\r\n\t\tthis.player.addListener('playback_error', e => { console.error(e); });\r\n\t  \r\n\t\t// Playback status updates\r\n\t\tthis.player.addListener('player_state_changed', state => { \r\n\t\t\tconsole.log('state changed', state); \r\n\t\t\tthis.props.updateCurrentPlayerState(state);\r\n\t\t\tthis.props.increaseSongTime(state.position/1000)\r\n\t\t\tthis.player.getVolume().then(res=>{\r\n\t\t\t\tthis.props.updateVolume(res*100);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t});\r\n\t  \r\n\t\t// Ready\r\n\t\tthis.player.addListener('ready',  data => {\r\n\t\t\tlet { device_id } = data;\r\n\t\t\tthis.props.updateSpotifyPlayer(this.player)\r\n\t\t\tthis.setState({ device_id: device_id }, ()=>{\r\n\t\t\t\tthis.transferPlaybackHere();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\t  }\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t  if(nextProps.token) {\r\n\t    this.props.fetchUser(nextProps.token);\r\n\t  };\r\n\r\n\t  if(this.audio !== undefined) {\r\n\t    this.audio.volume = nextProps.volume / 100;\r\n\t  }\r\n\r\n\t}\r\n\r\n\tstopSong = () => {\r\n\t  if(this.audio) {\r\n\t    this.props.stopSong();\r\n\t    this.audio.pause();\r\n\t  }\r\n\t}\r\n\r\n\tpauseSong = () => {\r\n\t  if(this.audio) {\r\n\t    this.props.pauseSong();\r\n\t    this.audio.pause();\r\n\t  }\r\n\t}\r\n\r\n\tresumeSong = () => {\r\n\t  if(this.audio) {\r\n\t    this.props.resumeSong();\r\n\t\tthis.audio.play();\r\n\t\t\r\n\t  }\r\n\t  \r\n\t}\r\n\r\n\taudioControl = (song) => {\r\n\r\n\t  const { playSong, stopSong } = this.props;\r\n\r\n\t  if(this.audio === undefined){\r\n\t    playSong(song.track);\r\n\t    this.audio = new Audio(song.track.preview_url);\r\n\t    this.audio.play();\r\n\t  } else {\r\n\t    stopSong();\r\n\t    this.audio.pause();\r\n\t    playSong(song.track);\r\n\t    this.audio = new Audio(song.track.preview_url);\r\n\t    this.audio.play();\r\n\t  }\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\r\n\t  return (\r\n\r\n\t    <div className='App'>\r\n\t      <div className='app-container'>\r\n\t\t\t  \r\n\t\t\t<div className='left-side-section'>\r\n\t\t\t\t<SideMenu />\r\n\t\t\t\t<UserPlaylists />\r\n\t\t\t\t<ArtWork />\r\n\t\t\t</div>\r\n\r\n\t        <div className='main-section'>\r\n\t          <Header />\r\n\t          <div className='main-section-container'>\r\n\t            <MainHeader\r\n\t              pauseSong={ this.pauseSong }\r\n\t              resumeSong={ this.resumeSong }\r\n\t            />\r\n\t            <MainView\r\n\t              pauseSong={this.pauseSong}\r\n\t              resumeSong={ this.resumeSong }\r\n\t              audioControl={ this.audioControl }\r\n\t            />\r\n\t          </div>\r\n\t        </div>\r\n\r\n\t        <Footer\r\n\t          stopSong={ this.stopSong }\r\n\t          pauseSong={ this.pauseSong }\r\n\t          resumeSong={ this.resumeSong }\r\n\t          audioControl={ this.audioControl }\r\n\t        />\r\n\t      </div>\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nApp.propTypes = {\r\n  token: PropTypes.string,\r\n  fetchUser: PropTypes.func,\r\n  setToken: PropTypes.func,\r\n  pauseSong: PropTypes.func,\r\n  playSong: PropTypes.func,\r\n  stopSong: PropTypes.func,\r\n  resumeSong: PropTypes.func,\r\n  volume: PropTypes.number,\r\n  spotifyPlayer: PropTypes.object,\r\n  currentPlayerState: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    token: state.tokenReducer.token,\r\n\tvolume: state.soundReducer.volume,\r\n\tspotifyPlayer: state.spotifyPlayerReducer.spotifyPlayer,\r\n\tcurrentPlayerState: PropTypes.object, \r\n  };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\r\n  return bindActionCreators({\r\n    fetchUser,\r\n\tsetToken,\r\n    playSong,\r\n    stopSong,\r\n    pauseSong,\r\n\tresumeSong,\r\n\tupdateSpotifyPlayer,\r\n\tupdateCurrentPlayerState,\r\n\tupdateHeaderTitle,\r\n\tincreaseSongTime,\r\n\tupdateVolume\r\n  },dispatch);\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './reducers';\r\nimport App from './App';\r\n\r\n//create the redux store\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  applyMiddleware(thunk)\r\n\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\t\r\n  </Provider>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}